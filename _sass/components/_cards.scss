@use "../base/colors";
@use "../mixins/breakpoints";

.cards-container {
  display: flex;
  gap: 1rem;

  flex-wrap: wrap;

  a {
    text-decoration: none;
    color: black;
  }

  @include breakpoints.for-desktop-down {
    flex-direction: column;
  }
  .card {
    cursor: pointer;
    border: 1px solid colors.$accent-color-lightest;
    padding: 1rem;
    display: flex;
    gap: 2rem;
    flex-direction: column;
    flex-basis: 20rem;
    border-radius: 1rem;
    transition: 0.3s ease;
    @include breakpoints.for-tablet-landscape-down {
      gap: 1rem;
    }

    &:hover {
      box-shadow: 0px 0px 15px rgb(189, 189, 189);
      transform: translateY(-2px);

      .card-icon {
        color: colors.$accent-color;
      }
    }
    .card-icon {
      padding: 1rem 1rem;
      font-size: 2rem;
      transition: 0.3s ease;
    }

    &:hover > .card-icon {
      color: colors.$accent-color;
    }

    .card-title {
      font-size: 1.3rem;
      font-weight: bold;
      border-left: 2px solid colors.$accent-color;
      padding-left: 1rem;
    }
    .card-description {
      font-size: 1.1rem;
    }
  }
}

//gradient border animation for cards

/*
* `@property` is required for the animation to work.
* Without it, the angle values won’t interpolate properly.
*
* @see https://dev.to/afif/we-can-finally-animate-css-gradient-kdk
*/
@property --bg-angle {
 inherits: false;
 initial-value: 0deg;
 syntax: "<angle>";
}


/**
 * To animate the gradient, we set the custom property to 1 full
 * rotation. The animation starts at the default value of `0deg`.
 */
 @keyframes spin {
    to {
      --bg-angle: 360deg;
    }
  }

.card.gradient-border {
  /* add the animation, but pause it by default */
  animation: spin 5s infinite linear;
  background: fff;
        /**
         * Using `background-origin` we can create a “border” using two gradients. And to
         * make the gradients better-looking, we use OKLCH.
         *
         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/background-origin
         * @see https://evilmartians.com/chronicles/oklch-in-css-why-quit-rgb-hsl
        **/
  background: linear-gradient(
        to bottom,
        rgba(255, 255, 255, 0.897), rgba(204, 196, 255, 0.95)
      )
      padding-box,
    /* ends at inner border edges */
      conic-gradient(
        from var(--bg-angle) in oklch longer hue,
        oklch(0.85 0.37 0) 0 0
      )
      border-box; /* extends to outer border edges */

  /* a clear border lets the background gradient shine through */
  border: 2px solid transparent;
}
